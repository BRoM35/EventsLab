[{"/home/roman/Рабочий стол/eventslab/front/src/App.js":"1","/home/roman/Рабочий стол/eventslab/front/src/components/Profile/Profile.js":"2","/home/roman/Рабочий стол/eventslab/front/src/components/Users/RegistrationForm.js":"3","/home/roman/Рабочий стол/eventslab/front/src/components/Users/ConfirmUser.js":"4","/home/roman/Рабочий стол/eventslab/front/src/components/Events/EventParticipants.js":"5","/home/roman/Рабочий стол/eventslab/front/src/components/Documents/CreateDocuments.js":"6","/home/roman/Рабочий стол/eventslab/front/src/components/Events/EventViewForm.js":"7","/home/roman/Рабочий стол/eventslab/front/src/components/Events/CreateEvents.js":"8","/home/roman/Рабочий стол/eventslab/front/src/components/Profile/Forms/EditForm.js":"9","/home/roman/Рабочий стол/eventslab/front/src/components/Users/AuthForm.js":"10","/home/roman/Рабочий стол/eventslab/front/src/components/Profile/InfoForm.js":"11","/home/roman/Рабочий стол/eventslab/front/src/components/Documents/CreateDocument.js":"12","/home/roman/Рабочий стол/eventslab/front/src/index.js":"13","/home/roman/Рабочий стол/eventslab/front/src/components/Users/BrowseUser.js":"14","/home/roman/Рабочий стол/eventslab/front/src/components/Documents/BrowseDocument.js":"15","/home/roman/Рабочий стол/eventslab/front/src/components/Documents/BrowseDocuments.js":"16","/home/roman/Рабочий стол/eventslab/front/src/components/Documents/DocumentReadForm.js":"17","/home/roman/Рабочий стол/eventslab/front/src/components/Events/EventReadForm.js":"18","/home/roman/Рабочий стол/eventslab/front/src/components/Documents/DocumentViewForm.js":"19","/home/roman/Рабочий стол/eventslab/front/src/components/Events/BrowseEvent.js":"20","/home/roman/Рабочий стол/eventslab/front/src/components/NavBar.js":"21"},{"size":3973,"mtime":1608836027000,"results":"22","hashOfConfig":"23"},{"size":7939,"mtime":1609075664000,"results":"24","hashOfConfig":"23"},{"size":4754,"mtime":1608826757000,"results":"25","hashOfConfig":"23"},{"size":884,"mtime":1608810851000,"results":"26","hashOfConfig":"23"},{"size":4716,"mtime":1608840171000,"results":"27","hashOfConfig":"23"},{"size":510,"mtime":1606561860000,"results":"28","hashOfConfig":"23"},{"size":1705,"mtime":1608822508000,"results":"29","hashOfConfig":"23"},{"size":2652,"mtime":1608835008000,"results":"30","hashOfConfig":"23"},{"size":2830,"mtime":1608836193000,"results":"31","hashOfConfig":"23"},{"size":2447,"mtime":1608631443000,"results":"32","hashOfConfig":"23"},{"size":1736,"mtime":1608836201000,"results":"33","hashOfConfig":"23"},{"size":2822,"mtime":1608831506000,"results":"34","hashOfConfig":"23"},{"size":593,"mtime":1606129850000,"results":"35","hashOfConfig":"23"},{"size":2904,"mtime":1608820733000,"results":"36","hashOfConfig":"23"},{"size":3387,"mtime":1608839039000,"results":"37","hashOfConfig":"23"},{"size":3948,"mtime":1608839216000,"results":"38","hashOfConfig":"23"},{"size":2483,"mtime":1609072157000,"results":"39","hashOfConfig":"23"},{"size":2282,"mtime":1608836256000,"results":"40","hashOfConfig":"23"},{"size":1514,"mtime":1608831014000,"results":"41","hashOfConfig":"23"},{"size":7967,"mtime":1609163774340,"results":"42","hashOfConfig":"23"},{"size":1910,"mtime":1608840600000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"rz5nr8",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/roman/Рабочий стол/eventslab/front/src/App.js",["98"],"import './App.css';\nimport React, {Component} from 'react';\nimport {Link, Redirect, Route, Switch} from \"react-router-dom\";\nimport NavBar from './components/NavBar';\nimport Profile from './components/Profile/Profile';\nimport BrowseUser from './components/Users/BrowseUser';\nimport BrowseEvent from './components/Events/BrowseEvent';\nimport BrowseEvents from './components/Events/BrowseEvents';\nimport BrowseDocument from './components/Documents/BrowseDocument';\nimport BrowseDocuments from './components/Documents/BrowseDocuments';\nimport CreateDocuments from './components/Documents/CreateDocuments';\nimport Auth from './components/Users/AuthForm';\nimport SignUp from './components/Users/RegistrationForm';\nimport ConfirmUser from \"./components/Users/ConfirmUser\";\nimport EventParticipants from \"./components/Events/EventParticipants\";\nimport {Layout} from 'antd';\n\nconst { Header } = Layout;\n\nconst checkLoginned = () => {\n  const login = JSON.parse(`${localStorage.getItem('login')}`) || false;\n  return login === true;\n}\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const isLogin = checkLoginned();\n\n  return (\n    <Route {...rest} render={props => (\n      isLogin ?\n        <Component {...props} />\n        : <Redirect to=\"/auth\" />\n    )} />\n  );\n};\n\nconst StartRoute = ({...rest}) => {\n  const isLogin = checkLoginned();\n\n  return (\n    <Route {...rest} render={props => (\n      isLogin ?\n        <Profile {...props} />\n        : <Redirect to=\"/auth\" />\n    )} />\n  );\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLogin: false,\n      name: '',\n      roleId: 4\n    }\n  }\n\n  componentDidMount() {\n    this.checkLoginned();\n  }\n\n  checkLoginned = () => {\n    const login = JSON.parse(`${localStorage.getItem('login')}`) || false;\n    const isLogin = login === true;\n    const user = JSON.parse(localStorage.getItem('currentUser')) || [];\n    console.log(user);\n    this.setState({\n      isLogin,\n      name: user.firstName,\n      roleId: user.roleId\n    })\n  }\n\n  redirectLogout = () => {\n    localStorage.setItem('login', 'false');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('currentUser');\n    document.location.href = '/auth';\n  }\n\n  render() {\n    const {isLogin, name, roleId} = this.state;\n\n    return (\n      <div className=\"App\">\n        <NavBar roleId={roleId} logged={isLogin}/>\n        <Layout>\n          <Header className=\"site-layout-sub-header-background\" className={'header'}>\n            {isLogin ?\n              [\n                <p className={'headerName'}>{name}</p>,\n                <p onClick={this.redirectLogout} className={'headerLogout'}>Logout</p>\n              ] :\n              [\n                <Link to=\"/auth\">SignIn</Link>,\n                <Link to=\"/registration\">SignUp</Link>\n              ]\n            }\n\n          </Header>\n          <Switch>\n            <Route path=\"/auth\" exact component={Auth} />\n            <StartRoute exact path=\"/\"/>\n            <PrivateRoute exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/registration\" component={SignUp} />\n            <Route exact path=\"/conf/:id\" component={ConfirmUser} />\n            <PrivateRoute path=\"/users/browse\" exact component={BrowseUser} />\n            <PrivateRoute path=\"/events/browse/:id\" exact component={() => <BrowseEvent roleId={roleId} />} />\n            <PrivateRoute path=\"/events/browse\" exact component={() => <BrowseEvents roleId={roleId} />} />\n            <PrivateRoute path=\"/events/parts/:id\" exact component={EventParticipants} />\n            <PrivateRoute path=\"/documents/browse/:id\" exact component={() => <BrowseDocument roleId={roleId} />} />\n            <PrivateRoute path=\"/documents/browse\" exact component={() => <BrowseDocuments roleId={roleId} />} />\n            <PrivateRoute path=\"/documents/create\" exact component={CreateDocuments} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n",["99","100"],"/home/roman/Рабочий стол/eventslab/front/src/components/Profile/Profile.js",[],"/home/roman/Рабочий стол/eventslab/front/src/components/Users/RegistrationForm.js",["101","102","103"],"/home/roman/Рабочий стол/eventslab/front/src/components/Users/ConfirmUser.js",[],["104","105"],"/home/roman/Рабочий стол/eventslab/front/src/components/Events/EventParticipants.js",["106","107","108"],"import React, { Component } from 'react';\nimport './Events.css';\nimport './EventForm.css'\nimport {Button, Layout, Table, Cascader} from 'antd';\nconst { Content } = Layout;\n\nclass EventParticipants extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      participants: [],\n      name: '',\n      id: 0\n    }\n  }\n\n  componentDidMount() {\n    this.getUsers();\n    this.getEvent();\n    this.getParticipants();\n  }\n\n  getUsers = async () => {\n    const response = await fetch(`http://localhost:3001/users/admin`);\n    const users = await response.json();\n    this.setState({users})\n  }\n\n  getEvent = async () => {\n    const path = document.location.pathname;\n    const id = +path.replace('/events/parts/','')\n    const response = await fetch(`http://localhost:3001/event/${id}`);\n    const event = await response.json();\n    const name = event[0].name;\n\n    this.setState({\n      name, id\n    })\n  }\n\n  getParticipants = async () => {\n    const path = document.location.pathname;\n    const id = +path.replace('/events/parts/','')\n    const response = await fetch(`http://localhost:3001/participants/${id}`);\n    const participants = await response.json();\n    console.log(participants)\n    this.setState({participants})\n  }\n\n  saveParticipants = async (params) => {\n    const role = this.state.users.filter(user => user.id === params.userId)[0].role;\n    const data = {\n      userId: params.userId,\n      status: 'asigned',\n      eventId: this.state.id,\n      role: role\n    }\n\n    const response = await fetch(`http://localhost:3001/participants/`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n\n    this.getParticipants();\n  }\n\n  prepareData = () => {\n    const {users, participants} = this.state;\n    const data = [];\n\n    users.map(user => {\n      const part = participants.filter(part => user.id === part.userId);\n\n      if (part.length) {\n        user.statusPart = part[0].status;\n        user.role = part[0].role;\n        user.partId = part[0].id;\n      } else {\n        user.statusPart = '';\n        user.role = '';\n      }\n\n      data.push(user);\n    })\n\n    return data;\n  }\n\n  deleteParticipant = async (id) => {\n    const response = await fetch(`http://localhost:3001/participant/${id}`, {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    this.getParticipants();\n  }\n\n  changeRole = (value, params) => {\n    const {users} = this.state;\n\n    users.map(user => {\n      if (params.userId === user.id) {\n        user.role = value[0];\n      }\n\n      return user;\n    })\n\n    this.setState({users})\n  }\n\n  renderTable = () => {\n    const data = this.prepareData();\n\n    const roleValues = [\n      {\n        code: 'Expert',\n        name: 'Expert'\n      },\n      {\n        code: 'Competitor',\n        name: 'Competitor'\n      }\n    ]\n    const columns = [\n      {\n        title: 'Фио',\n        dataIndex: 'fio',\n        align: 'center',\n        render: text => {\n          return <p>{text[0]} {text[1]}</p>\n        }\n      },\n      {\n        title: 'Название ивента',\n        dataIndex: 'name',\n        align: 'center',\n      },\n      {\n        title: 'Роль',\n        dataIndex: 'role',\n        align: 'center',\n        render: (text, record) => {\n          return <Cascader defaultValue={[`${text}`]} fieldNames={{ label: 'name', value: 'code'}} options={roleValues} onChange={(value) => this.changeRole(value, record)} />\n        }\n      },\n      {\n        title: 'Статус',\n        dataIndex: 'status',\n        align: 'center',\n        render: (text, record) => {\n          return (\n            <>\n              {\n                text === 'asigned' ?\n                  <Button onClick={() => this.deleteParticipant(record.partId)}  type=\"danger\">Удалить</Button> :\n                  <Button onClick={() => this.saveParticipants(record)} type=\"primary\">Добавить</Button>\n              }\n            </>\n          )\n        }\n      },\n    ];\n\n    const dataSource = [];\n\n    data.length && data.forEach((item, i) => {\n      dataSource.push({\n        key: item.id,\n        fio: [item.firstName, item.lastName],\n        name: this.state.name,\n        role: item.role,\n        status: item.statusPart,\n        userId: item.id,\n        partId: item.partId\n      })\n    }\n    )\n\n    return <Table className=\"tableUsers\" columns={columns} dataSource={dataSource} size=\"middle\" />\n  }\n\n  render() {\n    return (\n      <Content style={{ margin: '24px 16px 0' }}>\n        {this.renderTable()}\n      </Content>\n    )\n  }\n}\nexport default EventParticipants;\n","/home/roman/Рабочий стол/eventslab/front/src/components/Documents/CreateDocuments.js",["109"],"import React, { Component } from 'react';\nimport './Profile.css';\nimport { Layout } from 'antd';\nconst { Content } = Layout;\n\n\nclass CreateDocuments extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n\n    return (\n      <Content style={{ margin: '24px 16px 0' }}>\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n        CreateDocuments\n        </div>\n      </Content>\n    )\n  }\n}\nexport default CreateDocuments;","/home/roman/Рабочий стол/eventslab/front/src/components/Events/EventViewForm.js",["110","111"],"/home/roman/Рабочий стол/eventslab/front/src/components/Events/CreateEvents.js",[],["112","113"],"/home/roman/Рабочий стол/eventslab/front/src/components/Profile/Forms/EditForm.js",["114","115"],"import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button } from 'antd';\nimport '../InfoForm.css'\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\n\nclass EditForm extends React.Component {\n  formRef = React.createRef();\n\n  onFinish = (fieldsValue) => {\n    if (fieldsValue.newPassword !== fieldsValue.repeatNewPassword) {\n      return;\n    }\n    this.props.saveNewInfo(fieldsValue);\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      country,\n      about,\n      email,\n      password,\n      pin,\n      closeEditNode,\n    } = this.props;\n    return (\n      <>\n        <Form\n        initialValues={{ firstName, lastName, country, about, email, pin }}\n        {...formItemLayout}\n        style = {{width: '450px'}}\n        layout={'horizontal'}\n        onFinish={this.onFinish}\n      >\n        <Form.Item name=\"firstName\" label=\"Имя\">\n          <Input placeholder=\"input placeholder\" />\n        </Form.Item>\n        <Form.Item name=\"lastName\" label=\"Фамилия\">\n          <Input placeholder=\"input placeholder\" />\n        </Form.Item>\n        <Form.Item name=\"country\" label=\"Страна\">\n          <Input placeholder=\"input placeholder\" />\n        </Form.Item>\n        <Form.Item name=\"about\" label=\"О себе\">\n          <Input placeholder=\"input placeholder\" />\n        </Form.Item>\n        <Form.Item name=\"email\" label=\"E-mail\">\n          <span>{email}</span>\n        </Form.Item>\n        <Form.Item\n          hasFeedback\n          name=\"newPassword\"\n          label=\"Новый пароль\">\n            <Input.Password placeholder=\"input placeholder\" />\n        </Form.Item>\n        <Form.Item\n          rules={[\n            ({ getFieldValue }) => ({\n              validator(rule, value) {\n                if (!value || getFieldValue('newPassword') === value) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject('The two passwords that you entered do not match!');\n              },\n            }),\n          ]}\n          hasFeedback\n          dependencies={['password']}\n          name=\"repeatNewPassword\"\n          label=\"Повторите пароль\">\n            <Input.Password placeholder=\"input placeholder\" />\n        </Form.Item>\n        <Form.Item name=\"pin\" label=\"PIN\">\n          <Input placeholder=\"input placeholder\" />\n        </Form.Item>\n        <Form.Item >\n          <Button style={{marginRight: '15px'}} htmlType='submit' type=\"primary\">Применить</Button>\n          <Button onClick={closeEditNode} type=\"secondary\">Выйти</Button>\n        </Form.Item>\n      </Form>\n      </>\n    );\n  }\n};\n\nexport default EditForm;\n","/home/roman/Рабочий стол/eventslab/front/src/components/Users/AuthForm.js",["116","117","118"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Radio } from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\n\nclass AuthForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowTitle: false,\n      title: ''\n    }\n  }\n\n  async auth(params) {\n    const response = await fetch(`http://localhost:3001/login`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    });\n\n    const res = await response.json();\n\n    if (!res.hasOwnProperty('user')) {\n      this.setState({\n        isShow: true,\n        title: res.msg\n      })\n    } else {\n      if (res.msg === 'ok') {\n        localStorage.setItem('login', 'true');\n        localStorage.setItem('userId', res.user.id)\n        localStorage.setItem('currentUser', JSON.stringify(res.user));\n        document.location.href = '/profile'\n      } else {\n        this.setState({\n          isShow: true,\n          title: res.msg\n        })\n      }\n    }\n  }\n\n  onFinish = (fieldsValue) => {\n    const password = fieldsValue.password;\n    const email = fieldsValue.email;\n\n    this.auth({email, password});\n  }\n\n  redirectSignUp = () => {\n    document.location.href = '/registration'\n  }\n\n  render() {\n    const {isShow, title} = this.state;\n\n    return (\n      <>\n        <Form\n          {...formItemLayout}\n          style = {{width: '500px', margin: '20px 0'}}\n          layout={'horizontal'}\n          onFinish={this.onFinish}\n        >\n          <Form.Item name=\"email\" label=\"E-Mail\">\n            <Input placeholder=\"\" />\n          </Form.Item>\n          <Form.Item name=\"password\" label=\"Password\">\n            <Input.Password placeholder=\"\" />\n          </Form.Item>\n          {isShow ?\n            <p style={{'color': 'red'}}>\n              {title}\n            </p> : null\n          }\n\n          <Form.Item style={{justifyContent: 'center'}}>\n            <Button style={{marginRight: '20px'}} htmlType='submit' type=\"primary\">Sing In</Button>\n            <Button onClick={this.redirectSignUp} type=\"primary\">Sing Up</Button>\n          </Form.Item>\n        </Form>\n      </>\n    );\n  }\n};\n\nexport default AuthForm;\n","/home/roman/Рабочий стол/eventslab/front/src/components/Profile/InfoForm.js",["119","120","121"],"import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Button } from 'antd';\nimport './InfoForm.css'\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\n\nclass InfoForm extends React.Component {\n  render() {\n    const {\n      firstName,\n      lastName,\n      country,\n      about,\n      email,\n      pin,\n      setEditMode\n    } = this.props;\n    return (\n      <>\n        <div className='infoForm'>\n          <div className='infoRow'>\n            <span className='infoTitle'>Имя:</span>\n            <span className='infoValue'>{firstName}</span>\n          </div>\n          <div className='infoRow'>\n            <span className='infoTitle'>Фамилия:</span>\n            <span className='infoValue'>{lastName}</span>\n          </div>\n          <div className='infoRow'>\n            <span className='infoTitle'>Страна:</span>\n            <span className='infoValue'>{country}</span>\n          </div>\n          <div className='infoRow'>\n            <span className='infoTitle'>О себе:</span>\n            <span className='infoValue'>{about}</span>\n          </div>\n          <div className='infoRow'>\n            <span className='infoTitle'>E-mail:</span>\n            <span className='infoValue'>{email}</span>\n          </div>\n          <div className='infoRow'>\n            <span className='infoTitle'>PIN:</span>\n            <span className='infoValue'>{pin}</span>\n          </div>\n          <Button onClick={setEditMode} type=\"primary\">Редактировать</Button>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default InfoForm;\n",["122","123"],"/home/roman/Рабочий стол/eventslab/front/src/components/Documents/CreateDocument.js",["124"],"/home/roman/Рабочий стол/eventslab/front/src/index.js",[],"/home/roman/Рабочий стол/eventslab/front/src/components/Users/BrowseUser.js",["125","126","127"],"import React, { Component } from 'react';\nimport './Users.css';\nimport { Button, Layout, Modal, Table } from 'antd';\nimport {Link} from \"react-router-dom\";\nimport moment from \"moment\";\nconst { Content } = Layout;\n\nclass BrowseUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    this.getUsers()\n  }\n\n  getUsers = async () => {\n    const response = await fetch(`http://localhost:3001/users/admin`);\n    const users = await response.json();\n\n    this.setState({users})\n  }\n\n  renderTable = () => {\n    const {users} = this.state;\n    const data = [];\n\n    const sortData = [];\n\n    users.forEach((item, i) => {\n      if (item.status === 'conf_mail') {\n        sortData.push(item);\n      } else {\n        data.push(item);\n      }\n    })\n\n    const finalData = sortData.concat(data)\n\n    console.log(users)\n\n    const columns = [\n      {\n        title: 'Фио',\n        dataIndex: 'fio',\n        align: 'center',\n        render: text => {\n          return <p>{text[0]} {text[1]}</p>\n        }\n      },\n      {\n        title: 'Статус',\n        dataIndex: 'status',\n        align: 'center',\n        render: (text, record) => {\n          return (\n            <>\n              {\n                text === 'conf_mail' ?\n                  <Button onClick={() => this.confirmUser(record.key)} type=\"primary\">Подтвердить</Button> : null\n              }\n              <Button onClick={() => this.deleteUser(record.key)} style={{marginLeft: '15px'}} type=\"danger\">Удалить</Button>\n            </>\n          )\n        }\n      },\n    ];\n\n    const dataSource = [];\n\n    finalData.length && finalData.forEach((item, i) => {\n      dataSource.push({\n        key: item.id,\n        fio: [item.firstName, item.lastName],\n        status: item.status\n      })\n    }\n  )\n\n    return <Table className=\"tableUsers\" columns={columns} dataSource={dataSource} size=\"middle\" />\n  }\n\n  confirmUser = async (id) => {\n    const response = await fetch(`http://localhost:3001/users/admin/${id}`, {\n      method: 'PUT',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    });\n\n    const users = await response.json();\n\n    this.setState({users});\n  }\n\n  deleteUser = async (id) => {\n    const response = await fetch(`http://localhost:3001/users/admin/${id}`, {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    });\n\n    const users = await response.json();\n\n    this.setState({users});\n  }\n\n\n  render() {\n\n    return (\n      <Content style={{ margin: '24px 16px 0' }}>\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n          {this.renderTable()}\n        </div>\n      </Content>\n    )\n  }\n}\nexport default BrowseUser;\n","/home/roman/Рабочий стол/eventslab/front/src/components/Documents/BrowseDocument.js",[],"/home/roman/Рабочий стол/eventslab/front/src/components/Documents/BrowseDocuments.js",[],"/home/roman/Рабочий стол/eventslab/front/src/components/Documents/DocumentReadForm.js",["128","129","130","131","132","133"],"/home/roman/Рабочий стол/eventslab/front/src/components/Events/EventReadForm.js",["134","135","136","137"],"/home/roman/Рабочий стол/eventslab/front/src/components/Documents/DocumentViewForm.js",["138","139"],"/home/roman/Рабочий стол/eventslab/front/src/components/Events/BrowseEvent.js",["140","141"],"import React, { Component } from 'react';\nimport './Events.css';\nimport './EventForm.css'\nimport {Button, Cascader, Form, Input, Layout, Modal, Table} from 'antd';\nimport EventViewForm from \"./EventViewForm\";\nimport EventReadForm from \"./EventReadForm\";\nimport {Link} from \"react-router-dom\";\nimport CreateDocument from \"../Documents/CreateDocument\";\nconst { Content } = Layout;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 8,\n    },\n  },\n  wrapperCol: {\n    xs: {\n      span: 24,\n    },\n    sm: {\n      span: 16,\n    },\n  },\n};\n\nclass BrowseEvent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modeView: true,\n      eventId: 0,\n      startDate: '',\n      endDate: '',\n      name: 'Первое событие',\n      participants: '0',\n      documents: [],\n      participantsList: [],\n      role: '',\n      isShowModal: false,\n      signDocId: 0,\n      docId: 0,\n      userPin: ''\n    }\n  }\n\n  componentDidMount() {\n    this.getEvent();\n    this.getDocuments();\n    this.getPin();\n  }\n\n  getPin = () => {\n    const user = JSON.parse(localStorage.getItem('currentUser'));\n    const userPin = user.pin;\n\n    this.setState({userPin});\n  }\n\n  getParticipants = async (id) => {\n    const response = await fetch(`http://localhost:3001/participants/${id}`);\n    const participantsList = await response.json();\n\n    const userId = JSON.parse(localStorage.getItem('currentUser')).id;\n    const roleUserParticipants =\n      participantsList.filter(part => part.userId === userId);\n    let role = '';\n\n    if (roleUserParticipants.length) {\n      role = roleUserParticipants[0]['role'];\n    }\n\n    this.setState({participantsList, role })\n  }\n\n  getDocuments = async () => {\n    const path = document.location.pathname;\n    const id = +path.replace('/events/browse/','')\n    const response = await fetch(`http://localhost:3001/documents/${id}`);\n    const documents = await response.json();\n\n    this.setState({\n      documents\n    })\n  }\n\n  getEvent = async () => {\n    const path = document.location.pathname;\n    const id = +path.replace('/events/browse/','')\n    const response = await fetch(`http://localhost:3001/event/${id}`);\n    const event = await response.json();\n\n    const eventId = event[0].id;\n    const startDate = event[0].startDate;\n    const endDate = event[0].endDate;\n    const name = event[0].name;\n    const participants = event[0].part;\n\n    this.setState({\n      eventId, startDate, endDate, name, participants\n    })\n    this.getParticipants(eventId);\n  }\n\n  saveEvent = async (params) => {\n    const id = this.state.eventId;\n    const response = await fetch(`http://localhost:3001/events/${id}`, {\n      method: 'PUT',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    });\n\n    const event = await response.json();\n\n    const startDate = event[0].startDate;\n    const endDate = event[0].endDate;\n    const name = event[0].name;\n\n    this.setState({\n      startDate, endDate, name, modeView: true\n    })\n  }\n\n  assignEvent = () => {\n    const id = this.state.eventId;\n    document.location.href = `/events/parts/${id}`;\n  }\n\n  changeModeView = (mode) => {\n    this.setState({\n      modeView: mode\n    })\n  }\n\n  signDocument = async (id) => {\n    const {docId} = this.state;\n    const userId = JSON.parse(localStorage.getItem('currentUser')).id;\n    console.log(docId, 'Типо подписан')\n    const response = await fetch(`http://localhost:3001/document/sign/${docId}`, {\n      method: 'PUT',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({userId})\n    });\n    //\n    const documents = await response.json();\n    //\n    this.showModal(false);\n    this.setState({\n      documents\n    })\n  }\n\n  renderTable = () => {\n    const {documents, role} = this.state;\n    const {roleId} = this.props;\n    const data = [];\n    const filterDoc = documents.filter(doc => doc.forWhom === role || roleId === 1);\n\n    const columns = [\n      {\n        title: 'Документ',\n        dataIndex: 'name',\n        align: 'center',\n        render: text => {\n          const linkTo = `/documents/browse/${text[1]}`;\n          return <Link to={linkTo}>{text[0]}</Link>\n        }\n      },\n      {\n        title: 'Состояние',\n        dataIndex: 'status',\n        align: 'center',\n        render: (text, record) => {\n          if (text === 'not signed') {\n            if (record.forWhom === role) {\n              return <Button onClick={() => this.showModalSign(record.key)} className=\"buttonEventsAdd\"\n                             type=\"primary\">\n                Подписать\n              </Button>\n            } else {\n              return <p>Не подписан</p>\n            }\n\n          } else {\n            return <p>Подписан</p>\n          }\n        }\n      }\n    ];\n\n    if (filterDoc.length) {\n      filterDoc.forEach((item, i) => {\n          const id = item.id;\n          const name = item.name;\n          data.push({\n            key: id,\n            name: [name, id],\n            status: item.status,\n            forWhom: item.forWhom\n          })\n        }\n      )\n      return <Table className=\"tableEvents\" columns={columns} dataSource={data} size=\"middle\" />\n    }\n  }\n\n  showModalSign = (id) => {\n    this.setState({docId: id});\n    this.showModal(true);\n  }\n\n  showModal = (isOpen) => {\n    this.setState({isShowModal: isOpen})\n  };\n\n  render() {\n    const {\n      modeView,\n      eventId,\n      startDate,\n      endDate,\n      name,\n      participants,\n      userPin,\n      isShowModal\n    } = this.state;\n    const {\n      roleId\n    } = this.props;\n\n    return (\n      <Content style={{ margin: '24px 16px 0' }}>\n        <div className=\"event\">\n          {modeView ?\n            <EventViewForm\n              eventId={eventId}\n              startDate={startDate}\n              endDate={endDate}\n              name={name}\n              participants={participants}\n              assignEvent={this.assignEvent}\n              changeModeView={this.changeModeView}\n              roleId={roleId}\n            /> :\n            <EventReadForm\n              eventId={eventId}\n              startDate={startDate}\n              endDate={endDate}\n              name={name}\n              participants={participants}\n              changeModeView={this.changeModeView}\n              roleId={roleId}\n              saveEvent={this.saveEvent}\n            />\n          }\n\n        </div>\n        {modeView ?\n          this.renderTable() : null\n        }\n\n        <Modal\n          title=\"Подписать документ\"\n          visible={isShowModal}\n          footer={null}\n          onCancel={() => this.showModal(false)}\n        >\n          <Form\n            {...formItemLayout}\n            style = {{width: '470px', margin: '20px 0'}}\n            layout={'horizontal'}\n            onFinish={this.signDocument}\n          >\n            <Form.Item rules={[\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  const val = value === undefined ? '' : `${value}`;\n                  console.log(val,userPin);\n                  if (userPin === val) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject('Ввёден неправильный ПИН');\n                },\n              }),\n            ]} name=\"name\" label=\"Введите пин\">\n              <Input placeholder=\"input placeholder\" />\n            </Form.Item>\n            <Form.Item style={{justifyContent: 'center'}}>\n              <Button className=\"buttonOkFormEvents\" htmlType='submit' type=\"primary\">Ок</Button>\n              <Button onClick={() => this.showModal(false)} type=\"secondary\">Отмена</Button>\n            </Form.Item>\n          </Form>\n        </Modal>\n      </Content>\n    )\n  }\n}\nexport default BrowseEvent;\n","/home/roman/Рабочий стол/eventslab/front/src/components/NavBar.js",["142","143"],{"ruleId":"144","severity":1,"message":"145","line":89,"column":65,"nodeType":"146","endLine":89,"endColumn":85},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"155","line":2,"column":43,"nodeType":"153","messageId":"154","endLine":2,"endColumn":60},{"ruleId":"151","severity":1,"message":"156","line":4,"column":31,"nodeType":"153","messageId":"154","endLine":4,"endColumn":36},{"ruleId":"147","replacedBy":"157"},{"ruleId":"149","replacedBy":"158"},{"ruleId":"151","severity":1,"message":"159","line":60,"column":11,"nodeType":"153","messageId":"154","endLine":60,"endColumn":19},{"ruleId":"160","severity":1,"message":"161","line":76,"column":20,"nodeType":"162","messageId":"163","endLine":76,"endColumn":22},{"ruleId":"151","severity":1,"message":"159","line":95,"column":11,"nodeType":"153","messageId":"154","endLine":95,"endColumn":19},{"ruleId":"164","severity":1,"message":"165","line":8,"column":3,"nodeType":"166","messageId":"167","endLine":11,"endColumn":4},{"ruleId":"151","severity":1,"message":"168","line":4,"column":9,"nodeType":"153","messageId":"154","endLine":4,"endColumn":16},{"ruleId":"151","severity":1,"message":"169","line":17,"column":7,"nodeType":"153","messageId":"154","endLine":17,"endColumn":14},{"ruleId":"147","replacedBy":"170"},{"ruleId":"149","replacedBy":"171"},{"ruleId":"151","severity":1,"message":"172","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"173","line":42,"column":7,"nodeType":"153","messageId":"154","endLine":42,"endColumn":15},{"ruleId":"151","severity":1,"message":"152","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"174","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":16},{"ruleId":"151","severity":1,"message":"156","line":4,"column":31,"nodeType":"153","messageId":"154","endLine":4,"endColumn":36},{"ruleId":"151","severity":1,"message":"172","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"175","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"176","line":6,"column":7,"nodeType":"153","messageId":"154","endLine":6,"endColumn":21},{"ruleId":"147","replacedBy":"177"},{"ruleId":"149","replacedBy":"178"},{"ruleId":"151","severity":1,"message":"179","line":3,"column":30,"nodeType":"153","messageId":"154","endLine":3,"endColumn":40},{"ruleId":"151","severity":1,"message":"180","line":3,"column":26,"nodeType":"153","messageId":"154","endLine":3,"endColumn":31},{"ruleId":"151","severity":1,"message":"181","line":4,"column":9,"nodeType":"153","messageId":"154","endLine":4,"endColumn":13},{"ruleId":"151","severity":1,"message":"182","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":14},{"ruleId":"151","severity":1,"message":"179","line":3,"column":38,"nodeType":"153","messageId":"154","endLine":3,"endColumn":48},{"ruleId":"151","severity":1,"message":"182","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":14},{"ruleId":"151","severity":1,"message":"168","line":5,"column":9,"nodeType":"153","messageId":"154","endLine":5,"endColumn":16},{"ruleId":"151","severity":1,"message":"183","line":64,"column":7,"nodeType":"153","messageId":"154","endLine":64,"endColumn":14},{"ruleId":"151","severity":1,"message":"184","line":66,"column":7,"nodeType":"153","messageId":"154","endLine":66,"endColumn":13},{"ruleId":"151","severity":1,"message":"185","line":67,"column":7,"nodeType":"153","messageId":"154","endLine":67,"endColumn":16},{"ruleId":"151","severity":1,"message":"168","line":5,"column":9,"nodeType":"153","messageId":"154","endLine":5,"endColumn":16},{"ruleId":"151","severity":1,"message":"169","line":52,"column":7,"nodeType":"153","messageId":"154","endLine":52,"endColumn":14},{"ruleId":"151","severity":1,"message":"186","line":56,"column":7,"nodeType":"153","messageId":"154","endLine":56,"endColumn":19},{"ruleId":"151","severity":1,"message":"184","line":57,"column":7,"nodeType":"153","messageId":"154","endLine":57,"endColumn":13},{"ruleId":"151","severity":1,"message":"168","line":4,"column":9,"nodeType":"153","messageId":"154","endLine":4,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":8,"column":3,"nodeType":"166","messageId":"167","endLine":10,"endColumn":4},{"ruleId":"151","severity":1,"message":"187","line":4,"column":17,"nodeType":"153","messageId":"154","endLine":4,"endColumn":25},{"ruleId":"151","severity":1,"message":"188","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":22},{"ruleId":"151","severity":1,"message":"189","line":4,"column":16,"nodeType":"153","messageId":"154","endLine":4,"endColumn":22},{"ruleId":"151","severity":1,"message":"190","line":18,"column":7,"nodeType":"153","messageId":"154","endLine":18,"endColumn":12},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'CountryRegionData' is defined but never used.","'Radio' is defined but never used.",["191"],["192"],"'response' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Content' is assigned a value but never used.","'eventId' is assigned a value but never used.",["191"],["192"],"'Component' is defined but never used.","'password' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Form' is defined but never used.","'formItemLayout' is assigned a value but never used.",["191"],["192"],"'DatePicker' is defined but never used.","'Modal' is defined but never used.","'Link' is defined but never used.","'moment' is defined but never used.","'forWhom' is assigned a value but never used.","'roleId' is assigned a value but never used.","'eventName' is assigned a value but never used.","'participants' is assigned a value but never used.","'Cascader' is defined but never used.","'CreateDocument' is defined but never used.","'Button' is defined but never used.","'login' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]